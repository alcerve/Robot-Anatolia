<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="TFGateAccess" Id="{ba22d451-3f64-415e-bdc7-1bf7dbcbbf2e}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK TFGateAccess
VAR_INPUT
	MachineCmd : POINTER TO CommandBuffer;
	MachineCmdExe : POINTER TO CommandExe;
	MachineState : POINTER TO State;
	MachineError : POINTER TO Error;
	MachineMode : POINTER TO Mode;
	
	TimeBase : REAL;
	AccessRequest : BOOL;
	AccessDone : BOOL;
	LGVAccessActive	: BOOL;
	TilterPhaseStopDone : BOOL;
	PowerOK : BOOL;//Indica la presenza della marcia
	DisableStopEpowerOFF : BOOL;
END_VAR
VAR_OUTPUT
	AccessLamp : BOOL; (* Access Lamp: 	OFF = No Access Consent,
										ON = Access Consent,
										FLASH (1sec) = Access Requested (Machine Stopping)
										FLASH (0.5sec) = Waiting Restart
										FLASH (0.1sec) = Access Error *)
										
	AccesActive : BOOL; (* Gate Acces Sequence in Execution *)
	AccessOK : BOOL;	(* Accesso consentito *)
	TilterPhaseStop : BOOL;		
	AccessERRORCode : UINT;		
	ErrAck : BOOL;
	ErrAckDriver : BOOL;			
END_VAR
VAR
	ParametersArray : ParametersArray;
	
	AccessERROR : BOOL;
	AccessReqIN : BOOL;
	AccessReqOUT : BOOL;
	AccessCase : INT;
	MachineWasRunning : BOOL;
	MachineWasRunning2 : bool;
	Timer100 : REAL;
	Timer500 : REAL;
	Timer1000 : REAL;
	Clock100 : BOOL;
	Clock500 : BOOL;
	Clock1000 : BOOL;
	TimerPowerOFF : real;
	MEMDiMarciaInPartenza : BOOL;
	TimerRitardoPower : REAL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[TFTimerCall(ADR(Timer100),TimeBase);
TFTimerCall(ADR(Timer500),TimeBase);
TFTimerCall(ADR(Timer1000),TimeBase);
TFTimerCall(ADR(TimerPowerOFF),TimeBase);
TFTimerCall(ADR(TimerRitardoPower),TimeBase);

CASE AccessCase OF
	
	(* Wait Request ON *)
	0:	AccesActive := FALSE;
		AccessOK := FALSE;
		AccessReqIN := FALSE;
		AccessReqOUT := FALSE;
		
		IF AccessRequest AND NOT AccessDone (*AND NOT LGVAccessActive*) AND NOT TFIsModuleError(MachineError^) THEN
			AccesActive := TRUE;
			AccessERROR := FALSE;
			AccessReqIN := TRUE;
			(* Machine Was Running if CmdDO and No Stop Request *) 
			MachineWasRunning := MachineCmdExe^.Code = CmdDO AND MachineCmdExe^.PhaseStopRequest = 0 AND MachineCmdExe^.RapidStopRequest = 0;
			IF NOT DisableStopEpowerOFF THEN
				AccessCase := 10;
			ELSE
				AccessCase := 10;
			END_IF
		ELSIF AccessERROR THEN
			AccessERRORCode := 0;
			AccessERROR := FALSE;
			TilterPhaseStop := false;
		END_IF
		
	(* Phase Stop *)
	10:	TFParametersArrayClear(ADR(ParametersArray));
		TFCommandSend(CmdSTOPPHASE,ParametersArray,MachineCmd^);
		AccessCase := AccessCase + 1;
		
	11:	IF ((TFStateCodeGet(MachineState^) = StateDO_END OR
			MachineCmdExe^.Code = CmdNOP)) THEN
				TFTimerSet(ADR(TimerPowerOFF),100,TRUE);
				AccessCase := 20;
		ELSIF TFIsModuleError(MachineError^) THEN
			AccessERRORCode := ErrMACHINEPALLETIZER_ERRORE_MACCHINA_IN_RICHIN;
			TilterPhaseStop := TRUE;
			AccessERROR := TRUE;
			AccessCase := 0;
		END_IF

	(* Power Off *)
	20:	//Valuto se nel pal è presente la marcia, in questo modo alla fine della rich. di ingresso do o meno il power
		IF PowerOK THEN
			MEMDiMarciaInPartenza := TRUE;
		ELSE
			MEMDiMarciaInPartenza := FALSE;
		END_IF
		IF TFTimerDone(ADR(TimerPowerOFF)) THEN
			TilterPhaseStop := FALSE;
			TFParametersArrayClear(ADR(ParametersArray));
			ParametersArray.Parameters[0] := '0';
			TFCommandSend(CmdPOWER,ParametersArray,MachineCmd^);
			AccessCase := AccessCase + 1;
		ELSIF TFIsModuleError(MachineError^) THEN
			AccessERRORCode := ErrMACHINEPALLETIZER_ERRORE_MACCHINA_IN_RICHIN;
			AccessERROR := TRUE;
			AccessCase := 0;
		ELSIF NOT AccessRequest THEN
			TilterPhaseStop := FALSE;
			AccessCase := 0;
		END_IF	

	21:	IF TFStateCodeGet(MachineState^) = StatePOWER_END THEN
			AccessCase := 25;
		ELSIF TFIsModuleError(MachineError^) THEN
			AccessERRORCode := ErrMACHINEPALLETIZER_ERRORE_MACCHINA_IN_RICHIN;
			AccessERROR := TRUE;
			AccessCase := 0;
		END_IF
		
	25:(* Access Ok.... Wait Request Done ON *)
		AccessReqIN := FALSE;
		AccessReqOUT := FALSE;
		AccessOK := TRUE;
		IF NOT AccessRequest AND AccessDone THEN
			AccessCase := AccessCase + 1;
			TFTimerSet(ADR(TimerRitardoPower),100,TRUE);
			ErrAck := TRUE;
		END_IF
		IF TFIsModuleError(MachineError^) THEN
			AccessERRORCode := ErrMACHINEPALLETIZER_ERRORE_MACCHINA_IN_RICHIN;
			AccessERROR := TRUE;
			AccessCase := 0;
		END_IF
		
	26:
		IF TFTimerDone(ADR(TimerRitardoPower)) THEN
			TFTimerSet(ADR(TimerRitardoPower),100,TRUE);
			ErrAck := FALSE;
			AccessCase := 27;
		END_IF
		
	27:
		IF TFTimerDone(ADR(TimerRitardoPower)) THEN
			TFTimerSet(ADR(TimerRitardoPower),100,TRUE);
			ErrAckDriver := TRUE;
			AccessCase := 30;
		END_IF

	(* Access Ok.... Wait Request Done ON *)
	30:	//AccessReqIN := FALSE;
		//AccessReqOUT := FALSE;
		//AccessOK := TRUE;
		//IF NOT AccessRequest AND AccessDone THEN
		IF TFTimerDone(ADR(TimerRitardoPower)) THEN
			AccessCase := 31;
			TFTimerSet(ADR(TimerRitardoPower),100,TRUE);
			ErrAckDriver := FALSE;
		END_IF
		//END_IF
		IF TFIsModuleError(MachineError^) THEN
			AccessERRORCode := ErrMACHINEPALLETIZER_ERRORE_MACCHINA_IN_RICHIN;
			AccessERROR := TRUE;
			AccessCase := 0;
		END_IF

	(* Wait Request Done OFF *)
	31:	TFTimerSet(ADR(TimerRitardoPower),100,AccessDone);
		IF NOT AccessDone AND TFTimerDone(ADR(TimerRitardoPower))THEN
			AccessOK := FALSE;
			AccessReqOUT := TRUE;
			AccessCase := 40;
			ErrAckDriver := FALSE;
		ELSIF TFIsModuleError(MachineError^) THEN
			AccessERRORCode := ErrMACHINEPALLETIZER_ERRORE_MACCHINA_IN_RICHIN;
			AccessERROR := TRUE;
			AccessCase := 0;
		END_IF
		
	(* Power ON *)
	40:	IF NOT LGVAccessActive THEN
			IF MEMDiMarciaInPartenza THEN
				TFParametersArrayClear(ADR(ParametersArray));
				ParametersArray.Parameters[0] := '1';
				TFCommandSend(CmdPOWER,ParametersArray,MachineCmd^);
				AccessCase := AccessCase + 1;
			ELSE
				AccessCase := 50;
			END_IF		
		ELSE
			AccessCase := 50;
		END_IF	

	41:	IF TFStateCodeGet(MachineState^) = StatePOWER_END THEN //OR TFIsModuleError(MachineError^) THEN
			AccessCase := 50;
		ELSIF TFIsModuleError(MachineError^) THEN
			AccessERRORCode := ErrMACHINEPALLETIZER_ERRORE_MACCHINA_IN_RICHIN;
			AccessERROR := TRUE;
			AccessCase := 0;
		END_IF

	50:	IF NOT AccessRequest AND AccessDone THEN
			AccessCase := AccessCase + 1;
		END_IF

	(* Wait Request Done OFF *)
	51:	IF NOT AccessDone THEN
			AccessCase := 60;
		END_IF

	(* Machine Restart *)
	60:	AccessCase := AccessCase + 1;
		IF MachineWasRunning AND
			MachineMode^.Auto AND
			NOT MachineMode^.StopRequest AND
			NOT MachineMode^.RapidStopRequest AND NOT LGVAccessActive THEN
				TFParametersArrayClear(ADR(ParametersArray));
				TFCommandSend(CmdDO,ParametersArray,MachineCmd^);		
		ELSIF TFIsModuleError(MachineError^) THEN
			AccessERRORCode := ErrMACHINEPALLETIZER_ERRORE_MACCHINA_IN_RICHIN;
			AccessERROR := TRUE;
			AccessCase := 0;
		END_IF
			
	61:	AccessReqIN := FALSE;
		AccessReqOUT := FALSE;
		AccessOK := FALSE;
		AccessCase := 0;
		MEMDiMarciaInPartenza := FALSE;
		
		
	//80:
	//	AccessOK := FALSE;
	//	IF NOT AccessRequest AND AccessDone THEN
	//		AccessCase := AccessCase + 1;
	//	END_IF
		
	ELSE
		AccessERROR := TRUE;
		AccessERRORCode := ErrMACHINEPALLETIZER_ERRORE_MACCHINA_IN_RICHIN;
		MEMDiMarciaInPartenza := FALSE;
		AccessCase := 0;
		
END_CASE

(* Clocks *)
IF TFTimerDone(ADR(Timer100)) THEN
	TFTimerSet(ADR(Timer100),100,TRUE);
	Clock100 := NOT Clock100;
END_IF
IF TFTimerDone(ADR(Timer500)) THEN
	TFTimerSet(ADR(Timer500),500,TRUE);
	Clock500 := NOT Clock500;
END_IF
IF TFTimerDone(ADR(Timer1000)) THEN
	TFTimerSet(ADR(Timer1000),1000,TRUE);
	Clock1000 := NOT Clock1000;
END_IF

(* Access Lamp *)
AccessLamp := 	(AccessOK OR
				(AccessReqOUT AND Clock500) OR
				(AccessReqIN AND Clock1000))AND
				NOT AccessERROR OR (AccessERROR AND Clock100);
				]]></ST>
    </Implementation>
    <LineIds Name="TFGateAccess">
      <LineId Id="275" Count="0" />
      <LineId Id="278" Count="0" />
      <LineId Id="583" Count="0" />
      <LineId Id="280" Count="0" />
      <LineId Id="995" Count="0" />
      <LineId Id="140" Count="0" />
      <LineId Id="148" Count="0" />
      <LineId Id="388" Count="0" />
      <LineId Id="141" Count="0" />
      <LineId Id="463" Count="0" />
      <LineId Id="161" Count="0" />
      <LineId Id="173" Count="0" />
      <LineId Id="844" Count="0" />
      <LineId Id="174" Count="0" />
      <LineId Id="464" Count="0" />
      <LineId Id="398" Count="0" />
      <LineId Id="209" Count="0" />
      <LineId Id="400" Count="2" />
      <LineId Id="1211" Count="0" />
      <LineId Id="787" Count="0" />
      <LineId Id="1213" Count="1" />
      <LineId Id="1212" Count="0" />
      <LineId Id="845" Count="0" />
      <LineId Id="788" Count="1" />
      <LineId Id="403" Count="0" />
      <LineId Id="147" Count="0" />
      <LineId Id="325" Count="0" />
      <LineId Id="143" Count="0" />
      <LineId Id="150" Count="0" />
      <LineId Id="311" Count="0" />
      <LineId Id="313" Count="0" />
      <LineId Id="154" Count="0" />
      <LineId Id="340" Count="0" />
      <LineId Id="1162" Count="0" />
      <LineId Id="585" Count="0" />
      <LineId Id="765" Count="0" />
      <LineId Id="846" Count="0" />
      <LineId Id="766" Count="0" />
      <LineId Id="768" Count="0" />
      <LineId Id="767" Count="0" />
      <LineId Id="317" Count="1" />
      <LineId Id="326" Count="0" />
      <LineId Id="319" Count="0" />
      <LineId Id="657" Count="0" />
      <LineId Id="921" Count="1" />
      <LineId Id="924" Count="1" />
      <LineId Id="923" Count="0" />
      <LineId Id="920" Count="0" />
      <LineId Id="586" Count="0" />
      <LineId Id="160" Count="0" />
      <LineId Id="158" Count="1" />
      <LineId Id="769" Count="0" />
      <LineId Id="847" Count="0" />
      <LineId Id="770" Count="0" />
      <LineId Id="772" Count="0" />
      <LineId Id="587" Count="0" />
      <LineId Id="935" Count="0" />
      <LineId Id="937" Count="0" />
      <LineId Id="936" Count="0" />
      <LineId Id="320" Count="1" />
      <LineId Id="343" Count="0" />
      <LineId Id="774" Count="0" />
      <LineId Id="848" Count="0" />
      <LineId Id="775" Count="1" />
      <LineId Id="344" Count="1" />
      <LineId Id="1014" Count="0" />
      <LineId Id="1002" Count="6" />
      <LineId Id="1019" Count="0" />
      <LineId Id="1009" Count="4" />
      <LineId Id="1001" Count="0" />
      <LineId Id="1030" Count="0" />
      <LineId Id="1015" Count="2" />
      <LineId Id="1020" Count="0" />
      <LineId Id="1029" Count="0" />
      <LineId Id="1018" Count="0" />
      <LineId Id="1022" Count="0" />
      <LineId Id="1024" Count="4" />
      <LineId Id="1023" Count="0" />
      <LineId Id="346" Count="0" />
      <LineId Id="156" Count="0" />
      <LineId Id="175" Count="1" />
      <LineId Id="210" Count="0" />
      <LineId Id="163" Count="0" />
      <LineId Id="1031" Count="0" />
      <LineId Id="164" Count="0" />
      <LineId Id="998" Count="0" />
      <LineId Id="1021" Count="0" />
      <LineId Id="1032" Count="0" />
      <LineId Id="777" Count="0" />
      <LineId Id="849" Count="0" />
      <LineId Id="778" Count="2" />
      <LineId Id="165" Count="0" />
      <LineId Id="371" Count="0" />
      <LineId Id="367" Count="1" />
      <LineId Id="997" Count="0" />
      <LineId Id="381" Count="1" />
      <LineId Id="781" Count="0" />
      <LineId Id="993" Count="0" />
      <LineId Id="850" Count="0" />
      <LineId Id="782" Count="1" />
      <LineId Id="369" Count="1" />
      <LineId Id="372" Count="0" />
      <LineId Id="178" Count="0" />
      <LineId Id="525" Count="0" />
      <LineId Id="926" Count="0" />
      <LineId Id="931" Count="0" />
      <LineId Id="186" Count="0" />
      <LineId Id="358" Count="0" />
      <LineId Id="526" Count="0" />
      <LineId Id="927" Count="0" />
      <LineId Id="930" Count="0" />
      <LineId Id="929" Count="0" />
      <LineId Id="527" Count="1" />
      <LineId Id="348" Count="0" />
      <LineId Id="352" Count="0" />
      <LineId Id="355" Count="0" />
      <LineId Id="784" Count="0" />
      <LineId Id="853" Count="3" />
      <LineId Id="357" Count="0" />
      <LineId Id="373" Count="0" />
      <LineId Id="407" Count="5" />
      <LineId Id="415" Count="2" />
      <LineId Id="188" Count="0" />
      <LineId Id="862" Count="0" />
      <LineId Id="393" Count="2" />
      <LineId Id="191" Count="0" />
      <LineId Id="179" Count="0" />
      <LineId Id="157" Count="0" />
      <LineId Id="857" Count="3" />
      <LineId Id="360" Count="1" />
      <LineId Id="211" Count="2" />
      <LineId Id="193" Count="0" />
      <LineId Id="934" Count="0" />
      <LineId Id="1215" Count="2" />
      <LineId Id="1221" Count="0" />
      <LineId Id="1223" Count="1" />
      <LineId Id="1222" Count="0" />
      <LineId Id="144" Count="0" />
      <LineId Id="399" Count="0" />
      <LineId Id="852" Count="0" />
      <LineId Id="145" Count="0" />
      <LineId Id="933" Count="0" />
      <LineId Id="396" Count="0" />
      <LineId Id="142" Count="0" />
      <LineId Id="127" Count="0" />
      <LineId Id="302" Count="0" />
      <LineId Id="468" Count="3" />
      <LineId Id="282" Count="0" />
      <LineId Id="294" Count="7" />
      <LineId Id="303" Count="0" />
      <LineId Id="195" Count="0" />
      <LineId Id="473" Count="0" />
      <LineId Id="309" Count="0" />
      <LineId Id="475" Count="0" />
      <LineId Id="307" Count="0" />
      <LineId Id="1091" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>