<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="TFValutaAssiInFinestraDiPassMode" Id="{8691e484-8401-4b68-83cf-b34a747e6c46}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK TFValutaAssiInFinestraDiPassMode
VAR_INPUT
	ModuleAX_X : POINTER TO TFModulePalletizer_Ax;
	ModuleAX_Y : POINTER TO TFModulePalletizer_Ax;
	ModuleAX_Z : POINTER TO TFModulePalletizer_Ax;
	ModuleAX_J : POINTER TO TFModulePalletizer_AxJ_Lastre;
	Traiettoria : POINTER TO TFTraiettoria;
	WorkAreaManager : POINTER TO TFWorkAreaManager;
END_VAR
VAR
	Direzione_X_Positiva : BOOL;
	Direzione_Y_Positiva : BOOL;
	Direzione_Z_Positiva : BOOL;
	Direzione_J_Positiva : BOOL;
	Direzione_K_Positiva : bool;
	AsseXInMoto: BOOL;
	AsseYInMoto: BOOL;
	AsseZInMoto: BOOL;
	AsseJInMoto: BOOL;
	//AsseKInMoto: BOOL;
	OffsetPassModeY_Appoggio: REAL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* Azzero le variabili *)
Asse_X_InFinestraDiPassMode := FALSE;
Asse_Y_InFinestraDiPassMode := FALSE;
Asse_Z_InFinestraDiPassMode := FALSE;
Asse_J_InFinestraDiPassMode := FALSE;

(* Valuto la direzione degli assi *)
Direzione_X_Positiva := TFDirezioneAssePositiva(Posizione_Attuale:=ModuleAX_X^.Ax^.Status.ActPosition,Posizione_Finale:=ProgrammaToModule_X.Quota_Destinazione);
Direzione_Y_Positiva := TFDirezioneAssePositiva(Posizione_Attuale:=ModuleAX_Y^.Ax^.Status.ActPosition,Posizione_Finale:=ProgrammaToModule_Y.Quota_Destinazione);
Direzione_Z_Positiva := TFDirezioneAssePositiva(Posizione_Attuale:=ModuleAX_Z^.Ax^.Status.ActPosition,Posizione_Finale:=ProgrammaToModule_Z.Quota_Destinazione);
Direzione_J_Positiva := TFDirezioneAssePositiva(Posizione_Attuale:=ModuleAX_J^.Ax^.Status.ActPosition,Posizione_Finale:=ProgrammaToModule_J.Quota_Destinazione);
(* Valuto se gli assi si stanno muovendo *)
AsseXInMoto:=ModuleAX_X^.Ax^.AxRef^.Status.Moving;
AsseYInMoto:=ModuleAX_Y^.Ax^.AxRef^.Status.Moving;
AsseZInMoto:=ModuleAX_Z^.Ax^.AxRef^.Status.Moving;
AsseJInMoto:=ModuleAX_J^.Ax^.AxRef^.Status.Moving;

IF Traiettoria^.PassModeGlobalEnable AND AbilitazionePassModeGlobale THEN (* Abilitazione Globale del PassMode*)
	
//	CASE WorkAreaManager^.State OF
		
//		WAMANAGER_CICLO_RIPOSO_RUN: 
			(* Abilito tutti i pasmode*)
			Traiettoria^.PassModePoint_X_Enable[1] := TRUE; 
			Traiettoria^.PassModePoint_Y_Enable[1] := TRUE; 
			Traiettoria^.PassModePoint_Z_Enable[1] := TRUE;
			Traiettoria^.PassModePoint_J_Enable[1] := TRUE;
			Traiettoria^.PassModePoint_K_Enable[1] := TRUE;
			(* Valuta il Pass Mode Per L'asse X *)
			IF Traiettoria^.PassModePoint_X_Enable[1] THEN
				IF AsseXInMoto THEN
					IF Direzione_X_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_X^.Ax^.Status.ActPosition >= (ProgrammaToModule_X.Quota_Destinazione - OffsetPassMode.X) THEN
							Asse_X_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_X^.Ax^.Status.ActPosition <= (ProgrammaToModule_X.Quota_Destinazione + OffsetPassMode.X) THEN
							Asse_X_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
				
			(* Valuta il Pass Mode Per L'asse Y *)
			IF Traiettoria^.PassModePoint_Y_Enable[1] THEN
				IF Pinza_InIngombroColonne_Attuale THEN
					OffsetPassModeY_Appoggio := 80;
				ELSE
					OffsetPassModeY_Appoggio := OffsetPassMode.Y;
				END_IF
				IF AsseYInMoto THEN
					IF Direzione_Y_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_Y^.Ax^.Status.ActPosition >= (ProgrammaToModule_Y.Quota_Destinazione - OffsetPassModeY_Appoggio) THEN
							Asse_Y_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_Y^.Ax^.Status.ActPosition <= (ProgrammaToModule_Y.Quota_Destinazione + OffsetPassModeY_Appoggio) THEN
							Asse_Y_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
			
			(* Valuta il Pass Mode Per L'asse Z *)
			IF Traiettoria^.PassModePoint_Z_Enable[1] THEN
				IF AsseZInMoto THEN
					IF Direzione_Z_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_Z^.Ax^.Status.ActPosition >= (ProgrammaToModule_Z.Quota_Destinazione - OffsetPassMode.Z) THEN
							Asse_Z_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_Z^.Ax^.Status.ActPosition <= (ProgrammaToModule_Z.Quota_Destinazione + OffsetPassMode.Z) THEN
							Asse_Z_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
			
			(* Valuta il Pass Mode Per L'asse J *)
			IF Traiettoria^.PassModePoint_J_Enable[1] THEN
				IF AsseJInMoto THEN
					IF Direzione_J_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_J^.Ax^.Status.ActPosition >= (ProgrammaToModule_J.Quota_Destinazione - OffsetPassMode.J) THEN
							Asse_J_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_J^.Ax^.Status.ActPosition <= (ProgrammaToModule_J.Quota_Destinazione + OffsetPassMode.J) THEN
							Asse_J_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
		(*
		WAMANAGER_CICLO_PRELIEVO_PALL_RUN: 
			(* Abilito tutti i pasmode*)
			Traiettoria^.PassModePoint_X_Enable[1] := TRUE; 
			Traiettoria^.PassModePoint_Y_Enable[1] := TRUE; 
			Traiettoria^.PassModePoint_Z_Enable[1] := TRUE;
			Traiettoria^.PassModePoint_J_Enable[1] := TRUE;
			Traiettoria^.PassModePoint_K_Enable[1] := TRUE;
			(* Valuta il Pass Mode Per L'asse X *)
			IF Traiettoria^.PassModePoint_X_Enable[1] THEN
				IF AsseXInMoto THEN
					IF Direzione_X_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_X^.Ax^.Status.ActPosition >= (ProgrammaToModule_X.Quota_Destinazione - OffsetPassMode.X) THEN
							Asse_X_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_X^.Ax^.Status.ActPosition <= (ProgrammaToModule_X.Quota_Destinazione + OffsetPassMode.X) THEN
							Asse_X_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
				
			(* Valuta il Pass Mode Per L'asse Y *)
			IF Traiettoria^.PassModePoint_Y_Enable[1] THEN
				IF AsseYInMoto THEN
					IF Pinza_InIngombroColonne_Attuale THEN
						OffsetPassModeY_Appoggio := 80;
					ELSE
						OffsetPassModeY_Appoggio := OffsetPassMode.Y;
					END_IF
					IF Direzione_Y_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_Y^.Ax^.Status.ActPosition >= (ProgrammaToModule_Y.Quota_Destinazione - OffsetPassModeY_Appoggio) THEN
							Asse_Y_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_Y^.Ax^.Status.ActPosition <= (ProgrammaToModule_Y.Quota_Destinazione + OffsetPassModeY_Appoggio) THEN
							Asse_Y_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF	
				END_IF
			END_IF
			
			(* Valuta il Pass Mode Per L'asse Z *)
			IF Traiettoria^.PassModePoint_Z_Enable[1] THEN
				IF AsseZInMoto THEN
					IF Direzione_Z_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_Z^.Ax^.Status.ActPosition >= (ProgrammaToModule_Z.Quota_Destinazione - OffsetPassMode.Z) THEN
							Asse_Z_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_Z^.Ax^.Status.ActPosition <= (ProgrammaToModule_Z.Quota_Destinazione + OffsetPassMode.Z) THEN
							Asse_Z_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
			
			(* Valuta il Pass Mode Per L'asse J *)
			IF Traiettoria^.PassModePoint_J_Enable[1] THEN
				IF AsseJInMoto THEN
					IF Direzione_J_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_J^.Ax^.Status.ActPosition >= (ProgrammaToModule_J.Quota_Destinazione - OffsetPassMode.J) THEN
							Asse_J_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_J^.Ax^.Status.ActPosition <= (ProgrammaToModule_J.Quota_Destinazione + OffsetPassMode.J) THEN
							Asse_J_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
									
		WAMANAGER_CICLO_DEPOSITO_PALL_RUN: 
			(* Abilito tutti i pasmode*)
			Traiettoria^.PassModePoint_X_Enable[1] := TRUE; 
			Traiettoria^.PassModePoint_Y_Enable[1] := TRUE; 
			Traiettoria^.PassModePoint_Z_Enable[1] := TRUE;
			Traiettoria^.PassModePoint_J_Enable[1] := TRUE;
			Traiettoria^.PassModePoint_K_Enable[1] := TRUE;
			(* Valuta il Pass Mode Per L'asse X *)
			IF Traiettoria^.PassModePoint_X_Enable[1] THEN
				IF AsseXInMoto THEN
					IF Direzione_X_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_X^.Ax^.Status.ActPosition >= (ProgrammaToModule_X.Quota_Destinazione - OffsetPassMode.X) THEN
							Asse_X_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_X^.Ax^.Status.ActPosition <= (ProgrammaToModule_X.Quota_Destinazione + OffsetPassMode.X) THEN
							Asse_X_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
				
			(* Valuta il Pass Mode Per L'asse Y *)
			IF Traiettoria^.PassModePoint_Y_Enable[1] THEN
				IF AsseYInMoto THEN
					IF Direzione_Y_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_Y^.Ax^.Status.ActPosition >= (ProgrammaToModule_Y.Quota_Destinazione - OffsetPassMode.Y) THEN
							Asse_Y_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_Y^.Ax^.Status.ActPosition <= (ProgrammaToModule_Y.Quota_Destinazione + OffsetPassMode.Y) THEN
							Asse_Y_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
			
			(* Valuta il Pass Mode Per L'asse Z *)
			IF Traiettoria^.PassModePoint_Z_Enable[1] THEN
				IF AsseZInMoto THEN
					IF Direzione_Z_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_Z^.Ax^.Status.ActPosition >= (ProgrammaToModule_Z.Quota_Destinazione - OffsetPassMode.Z) THEN
							Asse_Z_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_Z^.Ax^.Status.ActPosition <= (ProgrammaToModule_Z.Quota_Destinazione + OffsetPassMode.Z) THEN
							Asse_Z_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
			
			(* Valuta il Pass Mode Per L'asse J *)
			IF Traiettoria^.PassModePoint_J_Enable[1] THEN
				IF AsseJInMoto THEN
					IF Direzione_J_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_J^.Ax^.Status.ActPosition >= (ProgrammaToModule_J.Quota_Destinazione - OffsetPassMode.J) THEN
							Asse_J_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_J^.Ax^.Status.ActPosition <= (ProgrammaToModule_J.Quota_Destinazione + OffsetPassMode.J) THEN
							Asse_J_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
									
		WAMANAGER_CICLO_PRELIEVO_FALDA_VUOTI_RUN:
			(* Abilito tutti i pasmode*)
			Traiettoria^.PassModePoint_X_Enable[1] := TRUE; 
			Traiettoria^.PassModePoint_Y_Enable[1] := TRUE; 
			Traiettoria^.PassModePoint_Z_Enable[1] := TRUE;
			Traiettoria^.PassModePoint_J_Enable[1] := TRUE;
			Traiettoria^.PassModePoint_K_Enable[1] := TRUE;
			(* Valuta il Pass Mode Per L'asse X *)
			IF Traiettoria^.PassModePoint_X_Enable[1] THEN
				IF AsseXInMoto THEN
					IF Direzione_X_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_X^.Ax^.Status.ActPosition >= (ProgrammaToModule_X.Quota_Destinazione - OffsetPassMode.X) THEN
							Asse_X_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_X^.Ax^.Status.ActPosition <= (ProgrammaToModule_X.Quota_Destinazione + OffsetPassMode.X) THEN
							Asse_X_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
				
			(* Valuta il Pass Mode Per L'asse Y *)
			IF Traiettoria^.PassModePoint_Y_Enable[1] THEN
				IF Pinza_InIngombroColonne_Attuale THEN
					OffsetPassModeY_Appoggio := 80;
				ELSE
					OffsetPassModeY_Appoggio := OffsetPassMode.Y;
				END_IF
				IF AsseYInMoto THEN
					IF Direzione_Y_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_Y^.Ax^.Status.ActPosition >= (ProgrammaToModule_Y.Quota_Destinazione - OffsetPassModeY_Appoggio) THEN
							Asse_Y_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_Y^.Ax^.Status.ActPosition <= (ProgrammaToModule_Y.Quota_Destinazione + OffsetPassModeY_Appoggio) THEN
							Asse_Y_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
			
			(* Valuta il Pass Mode Per L'asse Z *)
			IF Traiettoria^.PassModePoint_Z_Enable[1] THEN
				IF AsseZInMoto THEN
					IF Direzione_Z_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_Z^.Ax^.Status.ActPosition >= (ProgrammaToModule_Z.Quota_Destinazione - OffsetPassMode.Z) THEN
							Asse_Z_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_Z^.Ax^.Status.ActPosition <= (ProgrammaToModule_Z.Quota_Destinazione + OffsetPassMode.Z) THEN
							Asse_Z_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
			
			(* Valuta il Pass Mode Per L'asse J *)
			IF Traiettoria^.PassModePoint_J_Enable[1] THEN
				IF AsseJInMoto THEN
					IF Direzione_J_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_J^.Ax^.Status.ActPosition >= (ProgrammaToModule_J.Quota_Destinazione - OffsetPassMode.J) THEN
							Asse_J_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_J^.Ax^.Status.ActPosition <= (ProgrammaToModule_J.Quota_Destinazione + OffsetPassMode.J) THEN
							Asse_J_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
									
		WAMANAGER_CICLO_DEPOSITO_FALDA_VUOTI_RUN:
			(* Abilito tutti i pasmode*)
			Traiettoria^.PassModePoint_X_Enable[1] := TRUE; 
			Traiettoria^.PassModePoint_Y_Enable[1] := TRUE; 
			Traiettoria^.PassModePoint_Z_Enable[1] := TRUE;
			Traiettoria^.PassModePoint_J_Enable[1] := TRUE;
			Traiettoria^.PassModePoint_K_Enable[1] := TRUE;
			(* Valuta il Pass Mode Per L'asse X *)
			IF Traiettoria^.PassModePoint_X_Enable[1] THEN
				IF AsseXInMoto THEN
					IF Direzione_X_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_X^.Ax^.Status.ActPosition >= (ProgrammaToModule_X.Quota_Destinazione - OffsetPassMode.X) THEN
							Asse_X_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_X^.Ax^.Status.ActPosition <= (ProgrammaToModule_X.Quota_Destinazione + OffsetPassMode.X) THEN
							Asse_X_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
				
			(* Valuta il Pass Mode Per L'asse Y *)
			IF Traiettoria^.PassModePoint_Y_Enable[1] THEN
				IF AsseYInMoto THEN
					IF Direzione_Y_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_Y^.Ax^.Status.ActPosition >= (ProgrammaToModule_Y.Quota_Destinazione - OffsetPassMode.Y) THEN
							Asse_Y_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_Y^.Ax^.Status.ActPosition <= (ProgrammaToModule_Y.Quota_Destinazione + OffsetPassMode.Y) THEN
							Asse_Y_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
			
			(* Valuta il Pass Mode Per L'asse Z *)
			IF Traiettoria^.PassModePoint_Z_Enable[1] THEN
				IF AsseZInMoto THEN
					IF Direzione_Z_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_Z^.Ax^.Status.ActPosition >= (ProgrammaToModule_Z.Quota_Destinazione - OffsetPassMode.Z) THEN
							Asse_Z_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_Z^.Ax^.Status.ActPosition <= (ProgrammaToModule_Z.Quota_Destinazione + OffsetPassMode.Z) THEN
							Asse_Z_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
			
			(* Valuta il Pass Mode Per L'asse J *)
			IF Traiettoria^.PassModePoint_J_Enable[1] THEN
				IF AsseJInMoto THEN
					IF Direzione_J_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_J^.Ax^.Status.ActPosition >= (ProgrammaToModule_J.Quota_Destinazione - OffsetPassMode.J) THEN
							Asse_J_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_J^.Ax^.Status.ActPosition <= (ProgrammaToModule_J.Quota_Destinazione + OffsetPassMode.J) THEN
							Asse_J_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
		
		WAMANAGER_CICLO_PRELIEVO_FALDA_RUN:
			(* Abilito tutti i pasmode*)
			Traiettoria^.PassModePoint_X_Enable[1] := TRUE; 
			Traiettoria^.PassModePoint_Y_Enable[1] := TRUE; 
			Traiettoria^.PassModePoint_Z_Enable[1] := TRUE;
			Traiettoria^.PassModePoint_J_Enable[1] := TRUE;
			Traiettoria^.PassModePoint_K_Enable[1] := TRUE;
			(* Valuta il Pass Mode Per L'asse X *)
			IF Traiettoria^.PassModePoint_X_Enable[1] THEN
				IF AsseXInMoto THEN
					IF Direzione_X_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_X^.Ax^.Status.ActPosition >= (ProgrammaToModule_X.Quota_Destinazione - OffsetPassMode.X) THEN
							Asse_X_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_X^.Ax^.Status.ActPosition <= (ProgrammaToModule_X.Quota_Destinazione + OffsetPassMode.X) THEN
							Asse_X_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
				
			(* Valuta il Pass Mode Per L'asse Y *)
			IF Traiettoria^.PassModePoint_Y_Enable[1] THEN
				IF Pinza_InIngombroColonne_Attuale THEN
					OffsetPassModeY_Appoggio := 80;
				ELSE
					OffsetPassModeY_Appoggio := OffsetPassMode.Y;
				END_IF
				IF AsseYInMoto THEN
					IF Direzione_Y_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_Y^.Ax^.Status.ActPosition >= (ProgrammaToModule_Y.Quota_Destinazione - OffsetPassModeY_Appoggio) THEN
							Asse_Y_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_Y^.Ax^.Status.ActPosition <= (ProgrammaToModule_Y.Quota_Destinazione + OffsetPassModeY_Appoggio) THEN
							Asse_Y_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
			
			(* Valuta il Pass Mode Per L'asse Z *)
			IF Traiettoria^.PassModePoint_Z_Enable[1] THEN
				IF AsseZInMoto THEN
					IF Direzione_Z_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_Z^.Ax^.Status.ActPosition >= (ProgrammaToModule_Z.Quota_Destinazione - OffsetPassMode.Z) THEN
							Asse_Z_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_Z^.Ax^.Status.ActPosition <= (ProgrammaToModule_Z.Quota_Destinazione + OffsetPassMode.Z) THEN
							Asse_Z_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
			
			(* Valuta il Pass Mode Per L'asse J *)
			IF Traiettoria^.PassModePoint_J_Enable[1] THEN
				IF AsseJInMoto THEN
					IF Direzione_J_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_J^.Ax^.Status.ActPosition >= (ProgrammaToModule_J.Quota_Destinazione - OffsetPassMode.J) THEN
							Asse_J_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_J^.Ax^.Status.ActPosition <= (ProgrammaToModule_J.Quota_Destinazione + OffsetPassMode.J) THEN
							Asse_J_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
			
		WAMANAGER_CICLO_DEPOSITO_FALDA_RUN:
			(* Abilito tutti i pasmode*)
			Traiettoria^.PassModePoint_X_Enable[1] := TRUE; 
			Traiettoria^.PassModePoint_Y_Enable[1] := TRUE; 
			Traiettoria^.PassModePoint_Z_Enable[1] := TRUE;
			Traiettoria^.PassModePoint_J_Enable[1] := TRUE;
			Traiettoria^.PassModePoint_K_Enable[1] := TRUE;
			(* Valuta il Pass Mode Per L'asse X *)
			IF Traiettoria^.PassModePoint_X_Enable[1] THEN
				IF AsseXInMoto THEN
					IF Direzione_X_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_X^.Ax^.Status.ActPosition >= (ProgrammaToModule_X.Quota_Destinazione - OffsetPassMode.X) THEN
							Asse_X_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_X^.Ax^.Status.ActPosition <= (ProgrammaToModule_X.Quota_Destinazione + OffsetPassMode.X) THEN
							Asse_X_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
				
			(* Valuta il Pass Mode Per L'asse Y *)
			IF Traiettoria^.PassModePoint_Y_Enable[1] THEN
				IF AsseYInMoto THEN
					IF Direzione_Y_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_Y^.Ax^.Status.ActPosition >= (ProgrammaToModule_Y.Quota_Destinazione - OffsetPassMode.Y) THEN
							Asse_Y_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_Y^.Ax^.Status.ActPosition <= (ProgrammaToModule_Y.Quota_Destinazione + OffsetPassMode.Y) THEN
							Asse_Y_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
			
			(* Valuta il Pass Mode Per L'asse Z *)
			IF Traiettoria^.PassModePoint_Z_Enable[1] THEN
				IF AsseZInMoto THEN
					IF Direzione_Z_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_Z^.Ax^.Status.ActPosition >= (ProgrammaToModule_Z.Quota_Destinazione - OffsetPassMode.Z) THEN
							Asse_Z_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_Z^.Ax^.Status.ActPosition <= (ProgrammaToModule_Z.Quota_Destinazione + OffsetPassMode.Z) THEN
							Asse_Z_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
			
			(* Valuta il Pass Mode Per L'asse J *)
			IF Traiettoria^.PassModePoint_J_Enable[1] THEN
				IF AsseJInMoto THEN
					IF Direzione_J_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_J^.Ax^.Status.ActPosition >= (ProgrammaToModule_J.Quota_Destinazione - OffsetPassMode.J) THEN
							Asse_J_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_J^.Ax^.Status.ActPosition <= (ProgrammaToModule_J.Quota_Destinazione + OffsetPassMode.J) THEN
							Asse_J_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
		(*
		WAMANAGER_CICLO_PRELIEVO_PACCO_RUN:
			(* Abilito tutti i pasmode*)
			Traiettoria^.PassModePoint_X_Enable[1] := TRUE; 
			Traiettoria^.PassModePoint_Y_Enable[1] := TRUE; 
			Traiettoria^.PassModePoint_Z_Enable[1] := TRUE;
			Traiettoria^.PassModePoint_J_Enable[1] := TRUE;
			Traiettoria^.PassModePoint_K_Enable[1] := TRUE;
			(* Valuta il Pass Mode Per L'asse X *)
			IF Traiettoria^.PassModePoint_X_Enable[1] THEN
				IF AsseXInMoto THEN
					IF Direzione_X_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_X^.Ax^.Status.ActPosition >= (ProgrammaToModule_X.Quota_Destinazione - OffsetPassMode.X) THEN
							Asse_X_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_X^.Ax^.Status.ActPosition <= (ProgrammaToModule_X.Quota_Destinazione + OffsetPassMode.X) THEN
							Asse_X_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
				
			(* Valuta il Pass Mode Per L'asse Y *)
			IF Traiettoria^.PassModePoint_Y_Enable[1] THEN
				IF Pinza_InIngombroColonne_Attuale THEN
					OffsetPassModeY_Appoggio := 80;
				ELSE
					OffsetPassModeY_Appoggio := OffsetPassMode.Y;
				END_IF
				IF AsseYInMoto THEN
					IF Direzione_Y_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_Y^.Ax^.Status.ActPosition >= (ProgrammaToModule_Y.Quota_Destinazione - OffsetPassModeY_Appoggio) THEN
							Asse_Y_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_Y^.Ax^.Status.ActPosition <= (ProgrammaToModule_Y.Quota_Destinazione + OffsetPassModeY_Appoggio) THEN
							Asse_Y_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
			
			(* Valuta il Pass Mode Per L'asse Z *)
			IF Traiettoria^.PassModePoint_Z_Enable[1] THEN
				IF AsseZInMoto THEN
					IF Direzione_Z_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_Z^.Ax^.Status.ActPosition >= (ProgrammaToModule_Z.Quota_Destinazione - OffsetPassMode.Z) THEN
							Asse_Z_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_Z^.Ax^.Status.ActPosition <= (ProgrammaToModule_Z.Quota_Destinazione + OffsetPassMode.Z) THEN
							Asse_Z_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
			
			(* Valuta il Pass Mode Per L'asse J *)
			IF Traiettoria^.PassModePoint_J_Enable[1] THEN
				IF AsseJInMoto THEN
					IF Direzione_J_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_J^.Ax^.Status.ActPosition >= (ProgrammaToModule_J.Quota_Destinazione - 2(*OffsetPassMode.J*)) THEN
							Asse_J_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_J^.Ax^.Status.ActPosition <= (ProgrammaToModule_J.Quota_Destinazione + 2(*OffsetPassMode.J*)) THEN
							Asse_J_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
									
		WAMANAGER_CICLO_DEPOSITO_PACCO_RUN:
			(* Abilito tutti i pasmode*)
			Traiettoria^.PassModePoint_X_Enable[1] := TRUE; 
			Traiettoria^.PassModePoint_Y_Enable[1] := TRUE; 
			Traiettoria^.PassModePoint_Z_Enable[1] := TRUE;
			Traiettoria^.PassModePoint_J_Enable[1] := TRUE;
			Traiettoria^.PassModePoint_K_Enable[1] := TRUE;
			(* Valuta il Pass Mode Per L'asse X *)
			IF Traiettoria^.PassModePoint_X_Enable[1] THEN
				IF AsseXInMoto THEN
					IF Direzione_X_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_X^.Ax^.Status.ActPosition >= (ProgrammaToModule_X.Quota_Destinazione - OffsetPassMode.X) THEN
							Asse_X_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_X^.Ax^.Status.ActPosition <= (ProgrammaToModule_X.Quota_Destinazione + OffsetPassMode.X) THEN
							Asse_X_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
				
			(* Valuta il Pass Mode Per L'asse Y *)
			IF Traiettoria^.PassModePoint_Y_Enable[1] THEN
				IF AsseYInMoto THEN
					IF Direzione_Y_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_Y^.Ax^.Status.ActPosition >= (ProgrammaToModule_Y.Quota_Destinazione - OffsetPassMode.Y) THEN
							Asse_Y_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_Y^.Ax^.Status.ActPosition <= (ProgrammaToModule_Y.Quota_Destinazione + OffsetPassMode.Y) THEN
							Asse_Y_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
			
			(* Valuta il Pass Mode Per L'asse Z *)
			IF Traiettoria^.PassModePoint_Z_Enable[1] THEN
				IF AsseZInMoto THEN
					IF Direzione_Z_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_Z^.Ax^.Status.ActPosition >= (ProgrammaToModule_Z.Quota_Destinazione - OffsetPassMode.Z) THEN
							Asse_Z_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_Z^.Ax^.Status.ActPosition <= (ProgrammaToModule_Z.Quota_Destinazione + OffsetPassMode.Z) THEN
							Asse_Z_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
			
			(* Valuta il Pass Mode Per L'asse J *)
			IF Traiettoria^.PassModePoint_J_Enable[1] THEN
				IF AsseJInMoto THEN
					IF Direzione_J_Positiva THEN	//Se l'asse si sta muovendo in direzione POSITIVA
						IF ModuleAX_J^.Ax^.Status.ActPosition >= (ProgrammaToModule_J.Quota_Destinazione - OffsetPassMode.J) THEN
							Asse_J_InFinestraDiPassMode := TRUE;	
						END_IF
					ELSE							//Se l'asse si sta muovendo in direzione NEGATIVA
						IF ModuleAX_J^.Ax^.Status.ActPosition <= (ProgrammaToModule_J.Quota_Destinazione + OffsetPassMode.J) THEN
							Asse_J_InFinestraDiPassMode := TRUE;	
						END_IF
					END_IF
				END_IF
			END_IF
	*)
	END_CASE*)


ELSE
	(* Disabilito tutti i PasMode*)
	Traiettoria^.PassModePoint_X_Enable[1] := FALSE; 
	Traiettoria^.PassModePoint_Y_Enable[1] := FALSE; 
	Traiettoria^.PassModePoint_Z_Enable[1] := FALSE;
	Traiettoria^.PassModePoint_J_Enable[1] := FALSE;
	Traiettoria^.PassModePoint_K_Enable[1] := FALSE;
END_IF

]]></ST>
    </Implementation>
    <LineIds Name="TFValutaAssiInFinestraDiPassMode">
      <LineId Id="57" Count="0" />
      <LineId Id="64" Count="2" />
      <LineId Id="58" Count="0" />
      <LineId Id="99" Count="0" />
      <LineId Id="95" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="107" Count="2" />
      <LineId Id="777" Count="1" />
      <LineId Id="781" Count="2" />
      <LineId Id="80" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="194" Count="0" />
      <LineId Id="196" Count="0" />
      <LineId Id="198" Count="0" />
      <LineId Id="216" Count="0" />
      <LineId Id="244" Count="7" />
      <LineId Id="789" Count="0" />
      <LineId Id="252" Count="8" />
      <LineId Id="790" Count="0" />
      <LineId Id="261" Count="3" />
      <LineId Id="883" Count="1" />
      <LineId Id="886" Count="0" />
      <LineId Id="888" Count="0" />
      <LineId Id="885" Count="0" />
      <LineId Id="791" Count="0" />
      <LineId Id="265" Count="8" />
      <LineId Id="792" Count="0" />
      <LineId Id="274" Count="3" />
      <LineId Id="793" Count="0" />
      <LineId Id="278" Count="8" />
      <LineId Id="794" Count="0" />
      <LineId Id="287" Count="3" />
      <LineId Id="795" Count="0" />
      <LineId Id="291" Count="8" />
      <LineId Id="796" Count="0" />
      <LineId Id="243" Count="0" />
      <LineId Id="218" Count="0" />
      <LineId Id="220" Count="0" />
      <LineId Id="301" Count="7" />
      <LineId Id="797" Count="0" />
      <LineId Id="309" Count="8" />
      <LineId Id="798" Count="0" />
      <LineId Id="318" Count="3" />
      <LineId Id="799" Count="0" />
      <LineId Id="890" Count="3" />
      <LineId Id="889" Count="0" />
      <LineId Id="322" Count="8" />
      <LineId Id="800" Count="0" />
      <LineId Id="331" Count="3" />
      <LineId Id="801" Count="0" />
      <LineId Id="335" Count="8" />
      <LineId Id="802" Count="0" />
      <LineId Id="344" Count="3" />
      <LineId Id="803" Count="0" />
      <LineId Id="348" Count="8" />
      <LineId Id="804" Count="0" />
      <LineId Id="300" Count="0" />
      <LineId Id="759" Count="0" />
      <LineId Id="222" Count="0" />
      <LineId Id="357" Count="7" />
      <LineId Id="805" Count="0" />
      <LineId Id="365" Count="8" />
      <LineId Id="806" Count="0" />
      <LineId Id="374" Count="3" />
      <LineId Id="807" Count="0" />
      <LineId Id="378" Count="8" />
      <LineId Id="808" Count="0" />
      <LineId Id="387" Count="3" />
      <LineId Id="809" Count="0" />
      <LineId Id="391" Count="8" />
      <LineId Id="810" Count="0" />
      <LineId Id="400" Count="3" />
      <LineId Id="811" Count="0" />
      <LineId Id="404" Count="8" />
      <LineId Id="812" Count="0" />
      <LineId Id="241" Count="0" />
      <LineId Id="413" Count="0" />
      <LineId Id="226" Count="0" />
      <LineId Id="415" Count="7" />
      <LineId Id="813" Count="0" />
      <LineId Id="423" Count="8" />
      <LineId Id="814" Count="0" />
      <LineId Id="432" Count="3" />
      <LineId Id="920" Count="3" />
      <LineId Id="919" Count="0" />
      <LineId Id="815" Count="0" />
      <LineId Id="436" Count="8" />
      <LineId Id="816" Count="0" />
      <LineId Id="445" Count="3" />
      <LineId Id="817" Count="0" />
      <LineId Id="449" Count="8" />
      <LineId Id="818" Count="0" />
      <LineId Id="458" Count="3" />
      <LineId Id="819" Count="0" />
      <LineId Id="462" Count="8" />
      <LineId Id="820" Count="0" />
      <LineId Id="414" Count="0" />
      <LineId Id="471" Count="0" />
      <LineId Id="228" Count="0" />
      <LineId Id="473" Count="7" />
      <LineId Id="821" Count="0" />
      <LineId Id="481" Count="8" />
      <LineId Id="822" Count="0" />
      <LineId Id="490" Count="3" />
      <LineId Id="823" Count="0" />
      <LineId Id="494" Count="8" />
      <LineId Id="824" Count="0" />
      <LineId Id="503" Count="3" />
      <LineId Id="825" Count="0" />
      <LineId Id="507" Count="8" />
      <LineId Id="826" Count="0" />
      <LineId Id="516" Count="3" />
      <LineId Id="827" Count="0" />
      <LineId Id="520" Count="8" />
      <LineId Id="828" Count="0" />
      <LineId Id="472" Count="0" />
      <LineId Id="230" Count="0" />
      <LineId Id="232" Count="0" />
      <LineId Id="530" Count="7" />
      <LineId Id="829" Count="0" />
      <LineId Id="538" Count="8" />
      <LineId Id="830" Count="0" />
      <LineId Id="547" Count="3" />
      <LineId Id="905" Count="3" />
      <LineId Id="904" Count="0" />
      <LineId Id="831" Count="0" />
      <LineId Id="551" Count="8" />
      <LineId Id="832" Count="0" />
      <LineId Id="560" Count="3" />
      <LineId Id="833" Count="0" />
      <LineId Id="564" Count="8" />
      <LineId Id="834" Count="0" />
      <LineId Id="573" Count="3" />
      <LineId Id="835" Count="0" />
      <LineId Id="577" Count="8" />
      <LineId Id="836" Count="0" />
      <LineId Id="529" Count="0" />
      <LineId Id="586" Count="0" />
      <LineId Id="234" Count="0" />
      <LineId Id="588" Count="7" />
      <LineId Id="837" Count="0" />
      <LineId Id="596" Count="8" />
      <LineId Id="838" Count="0" />
      <LineId Id="605" Count="2" />
      <LineId Id="909" Count="0" />
      <LineId Id="839" Count="0" />
      <LineId Id="609" Count="8" />
      <LineId Id="840" Count="0" />
      <LineId Id="618" Count="3" />
      <LineId Id="841" Count="0" />
      <LineId Id="622" Count="8" />
      <LineId Id="842" Count="0" />
      <LineId Id="631" Count="3" />
      <LineId Id="843" Count="0" />
      <LineId Id="635" Count="8" />
      <LineId Id="844" Count="0" />
      <LineId Id="587" Count="0" />
      <LineId Id="236" Count="0" />
      <LineId Id="238" Count="0" />
      <LineId Id="645" Count="7" />
      <LineId Id="845" Count="0" />
      <LineId Id="653" Count="8" />
      <LineId Id="846" Count="0" />
      <LineId Id="662" Count="3" />
      <LineId Id="915" Count="3" />
      <LineId Id="914" Count="0" />
      <LineId Id="847" Count="0" />
      <LineId Id="666" Count="8" />
      <LineId Id="848" Count="0" />
      <LineId Id="675" Count="3" />
      <LineId Id="849" Count="0" />
      <LineId Id="679" Count="8" />
      <LineId Id="850" Count="0" />
      <LineId Id="688" Count="3" />
      <LineId Id="851" Count="0" />
      <LineId Id="692" Count="8" />
      <LineId Id="852" Count="0" />
      <LineId Id="644" Count="0" />
      <LineId Id="701" Count="0" />
      <LineId Id="240" Count="0" />
      <LineId Id="703" Count="7" />
      <LineId Id="853" Count="0" />
      <LineId Id="711" Count="8" />
      <LineId Id="854" Count="0" />
      <LineId Id="720" Count="3" />
      <LineId Id="855" Count="0" />
      <LineId Id="724" Count="8" />
      <LineId Id="856" Count="0" />
      <LineId Id="733" Count="3" />
      <LineId Id="857" Count="0" />
      <LineId Id="737" Count="8" />
      <LineId Id="858" Count="0" />
      <LineId Id="746" Count="3" />
      <LineId Id="859" Count="0" />
      <LineId Id="750" Count="8" />
      <LineId Id="860" Count="0" />
      <LineId Id="702" Count="0" />
      <LineId Id="199" Count="0" />
      <LineId Id="947" Count="0" />
      <LineId Id="197" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="117" Count="0" />
      <LineId Id="124" Count="0" />
      <LineId Id="120" Count="3" />
      <LineId Id="118" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="79" Count="0" />
      <LineId Id="78" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>